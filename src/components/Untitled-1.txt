const [firstGames, setFirstGames] = useState(false);

    // let handleChange = (value) => {
    //     clearInterval(startGame);
    //     props.Store.setChoosenModeGame(props.Store.modeGames[value]);
    //     props.Store.setIsPlay(false);
    //     props.Store.setCount(0);
    //     props.Store.setGameScore({ computer: 0, player: 0, countForWin: 0 })
    //     props.Store.setGrid(createGrid(props.Store.modeGames[value].field));
    // }
    // let createGrid = (size) => {
    //     let temp = [];
    //     for (let i = 0; i < +size; i++) {
    //         temp[i] = [];
    //         for (let j = 0; j < +size; j++) {
    //             temp[i][j] = {
    //                 classColor: '',
    //                 id: `${i}/${j}`
    //             }
    //         }
    //     }
    //     return temp;
    // }
    // // let endGame = (tempArr, winner) => {
    // //     if (tempArr.length !== 0) props.Store.setGrid(tempArr);
    // //     props.Store.setIsPlay(false);
    // //     props.Store.setGameScore({ computer: 0, player: 0, countForWin: 0 })
    // //     message.warn(winner);
    // //     // return window.clearInterval(intervalGames);
    // // }
    // let startGame = (arr, delay) => {
    //     return setInterval(() => { return handleCheckCell(arr) }, delay);
    // }
    // let handleCheckCell = (val) => {
    //     message.warn('вызов этой функции')
    // }
    // // let handleCheckCell = (val) => {
    // //     if (props.Store.isPlay === false) { window.clearInterval(startGame); return null };
    // //     let GameScore = props.Store.gameScore;
    // //     let count = props.Store.count;
    // //     let tempArr = [...props.Store.grid];

    // //     if (count <= val.length) {//count - текущий элемент 
    // //         if (count == val.length) {//для проверки последнего решающего элемента
    // //             let [i, j] = val[count - 1].id.split('/');
    // //             if (tempArr[i][j].classColor === 'blue-cell') {
    // //                 GameScore.computer = GameScore.computer + 1;
    // //                 if (GameScore.computer === GameScore.countForWin) {
    // //                     tempArr[i][j].classColor = 'red-cell';
    // //                     endGame([...tempArr], 'Выиграл компьютер!');
    // //                     return window.clearInterval(startGame);

    // //                 }
    // //             } else {
    // //                 GameScore.player = GameScore.player + 1;
    // //                 if (GameScore.player === GameScore.countForWin) {
    // //                     tempArr[i][j].classColor = 'green-cell';
    // //                     endGame([...tempArr], 'Выиграл игрок!');
    // //                     return window.clearInterval(startGame);

    // //                 }
    // //             }
    // //         } else if (count == 0) {
    // //             let [i, j] = val[count].id.split('/');
    // //             tempArr[+i][+j].classColor = 'blue-cell';
    // //             props.Store.setGrid(tempArr);
    // //             props.Store.setCount(count + 1);
    // //         } else {
    // //             let [i2, j2] = val[count - 1].id.split('/');
    // //             if (tempArr[i2][j2].classColor === 'blue-cell') {
    // //                 tempArr[i2][j2].classColor = 'red-cell';
    // //                 GameScore.computer = GameScore.computer + 1;
    // //                 if (GameScore.computer === GameScore.countForWin) {
    // //                     endGame([], 'Выиграл компьютер!');
    // //                     // props.Store.setIsPlay(false);
    // //                     // props.Store.setGameScore({ computer: 0, player: 0, countForWin: 0 })
    // //                     // message.warn('Выиграл компьютер!');
    // //                     return window.clearInterval(startGame);
    // //                 }
    // //             } else {
    // //                 GameScore.player = GameScore.player + 1;
    // //                 if (GameScore.player === GameScore.countForWin) {
    // //                     endGame([], 'Выиграл игрок!');
    // //                     // props.Store.setIsPlay(false);
    // //                     // props.Store.setGameScore({ computer: 0, player: 0, countForWin: 0 })
    // //                     // message.warn('Выиграл игрок!');
    // //                     return window.clearInterval(startGame);
    // //                 }
    // //                 //     }
    // //             }
    // //             let [i, j] = val[count].id.split('/');
    // //             tempArr[+i][+j].classColor = 'blue-cell';
    // //             props.Store.setGrid(tempArr);
    // //             props.Store.setCount(count + 1);
    // //         }
    // //     } else {
    // //         message.warn('Ничья');
    // //     }
    // // }
    // let randomSort = () => {
    //     let tempArr = [...props.Store.grid];
    //     let arr = [].concat(...tempArr);
    //     let j;
    //     for (let i = arr.length - 1; i > 0; i--) {
    //         j = Math.floor(Math.random() * (i + 1));
    //         [arr[j], arr[i]] = [arr[i], arr[j]];
    //     }
    //     return arr;
    // }
    // let handlePlayGame = () => {
    //     setFirstGames(true)
    //     let GameScore = props.Store.gameScore;
    //     let field = props.Store.choosenModeGame.field;
    //     props.Store.setGrid(createGrid(field))
    //     GameScore.countForWin = Math.floor((field * field) / 2) + 1;
    //     props.Store.setGameScore(GameScore);
    //     props.Store.setIsPlay(true);
    //     let arr = randomSort();
    //     startGame(arr, props.Store.choosenModeGame.delay);
    // }
    // // let handlePlayGame = () => {
    // //     if (!props.Store.isPlay && Object.entries(props.Store.choosenModeGame).length) {
    // //         if (props.Store.playerName === '') {
    // //             message.error('enter your name!')
    // //         } else {
    // //             clearInterval(startGame);
    // //             setFirstGames(true)
    // //             let GameScore = props.Store.gameScore;
    // //             let field = props.Store.choosenModeGame.field;
    // //             props.Store.setGrid(createGrid(field))
    // //             GameScore.countForWin = Math.floor((field * field) / 2) + 1;
    // //             props.Store.setGameScore(GameScore);

    // //             props.Store.setIsPlay(true);
    // //             let arr = randomSort();
    // //             startGame(arr,  props.Store.choosenModeGame.delay);
    // //         }
    // //     } else {
    // //         message.error('pick game mode or game is plaing')
    // //     }
    // // }
    // let handleChangeName = (name) => {
    //     props.Store.setPlayerName(name.target.value);
    // }
    // return (
    //     <div className='header-container'>
    //         {props.Store.gameSettings.length ?
    //             <div className='pick-game-mod-select'>
    //                 <Select style={{ width: 200 }} onChange={handleChange} defaultValue="Pick game mode">
    //                     {props.Store.gameSettings.map(item => {
    //                         return <Option key={item[0]} value={item[0]}>{item[0]}</Option>
    //                     })}
    //                 </Select>
    //             </div> : <div> load... </div>
    //         }

    //         <div className='enter-name-input'>
    //             <Input placeholder='Enter your name' onChange={handleChangeName} />
    //         </div>
    //         <div className='play-button'>
    //             <Button type='primary' onClick={handlePlayGame}>{
    //                 (firstGames && !props.Store.isPlay) ? 'PLAY AGAIN' : 'PLAY'
    //             }</Button>
    //         </div>
    //     </div>
    // );